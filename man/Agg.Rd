% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Agg.R
\name{Agg}
\alias{Agg}
\title{Find 3D aggregates}
\usage{
Agg(imgs, channel, kern.neighbour = c(3, 3, 3), kern.smooth = NULL,
  layers = NULL, pwidth = NULL, zstep = NULL, naming = NULL)
}
\arguments{
\item{imgs}{The paths of array files; i.e. output from loadIMG or findIMG functions.}

\item{channel}{Name of the channel to find aggregates in. Should be in the names of the array files}

\item{kern.neighbour}{Numeric vector indicating range of neighbouring pixels to aggregate in the x,y,z directions. Has to be odd intergers. c(1,1,1) means no aggregating.}

\item{kern.smooth}{Optional. Numeric vector indicating range of median smoothing in the x,y,z directions. Has to be odd intergers. c(1,1,1) means no smoothing.}

\item{layers}{Optional. Should the function only look in a subset of layers. A list with lists of layers to use for each image. Can also be the output from ELayers}

\item{pwidth}{Optional. Width of pixels in microns to calculate aggregate size in microns instead of pixels}

\item{zstep}{Optional. z-step in microns to calculate aggregate size in microns instead of pixels}

\item{naming}{Optional. Add metadata to the output dataframe by looking through names of array files. Should be a list of character vectors, each list element will be added as a variable. Example: naming=list(Time=c("T0","T1","T2")). The function inserts a variable called Time, and then looks through the names of the array files and inserts characters mathcing either T0, T1 or T2}
}
\value{
A list with two parts. First part is a dataframe with ID and size of aggregates and name of image, second part is a list of the arrays in which pixels are NA if empty or given a number indicating the aggregate ID
}
\description{
Function to group adjacent pixels in aggregates
}
\keyword{aggregate}
\keyword{array}
\keyword{image}
